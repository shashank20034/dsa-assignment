/* Question: How can we use a for loop to print numbers from 1 to 10? */
#include <stdio.h>

int main() {
    int i;
    for (i = 1; i <= 10; i++) {
        printf("%d ", i);
    }
    printf("\n");
    return 0;
}
/* Question: How can we use a while loop to print numbers from 1 to 10? */
#include <stdio.h>

int main() {
    int i = 1;
    while (i <= 10) {
        printf("%d ", i);
        i++;
    }
    printf("\n");
    return 0;
}
/* Question: How can we use a do-while loop to print numbers from 1 to 10? */
#include <stdio.h>

int main() {
    int i = 1;
    do {
        printf("%d ", i);
        i++;
    } while (i <= 10);
    printf("\n");
    return 0;
}
/* Question: How can we find the Fibonacci series up to n terms in C? */
#include <stdio.h>

int main() {
    int n = 10, i, t1 = 0, t2 = 1, nextTerm;
    printf("Fibonacci Series up to %d terms: \n", n);
    for (i = 1; i <= n; i++) {
        printf("%d, ", t1);
        nextTerm = t1 + t2;
        t1 = t2;
        t2 = nextTerm;
    }
    printf("\n");
    return 0;
}
/* Question: How can we calculate the factorial of a number using a loop? */
#include <stdio.h>

int main() {
    int n = 5, factorial = 1, i;
    for (i = 1; i <= n; i++) {
        factorial *= i;
    }
    printf("Factorial of %d: %d\n", n, factorial);
    return 0;
}
/* Question: How can we check if a number is prime or not in C? */
#include <stdio.h>

int main() {
    int n = 17, i, isPrime = 1;
    for (i = 2; i <= n / 2; i++) {
        if (n % i == 0) {
            isPrime = 0;
            break;
        }
    }
    if (isPrime == 1)
        printf("%d is a prime number\n", n);
    else
        printf("%d is not a prime number\n", n);
    return 0;
}
/* Question: How can we swap two numbers without using a temporary variable in C? */
#include <stdio.h>

int main() {
    int a = 5, b = 10;
    printf("Before swapping: a = %d, b = %d\n", a, b);
    a = a + b;
    b = a - b;
    a = a - b;
    printf("After swapping: a = %d, b = %d\n", a, b);
    return 0;
}
/* Question: How can we calculate the sum of digits of a number in C? */
#include <stdio.h>

int main() {
    int num = 12345, sum = 0, digit;
    while (num != 0) {
        digit = num % 10;
        sum += digit;
        num /= 10;
    }
    printf("Sum of digits: %d\n", sum);
    return 0;
}
/* Question: How can we find the largest among three numbers in C? */
#include <stdio.h>

int main() {
    int a = 5, b = 10, c = 7;
    int max = (a > b && a > c) ? a : ((b > c) ? b : c);
    printf("Largest number: %d\n", max);
    return 0;
}
/* Question: How can we find the reverse of a number in C? */
#include <stdio.h>

int main() {
    int num = 12345, reversed = 0, remainder;
    while (num != 0) {
        remainder = num % 10;
        reversed = reversed * 10 + remainder;
        num /= 10;
    }
    printf("Reversed number: %d\n", reversed);
    return 0;
}
/* Question: How can we find the power of a number using recursion in C? */
#include <stdio.h>

int power(int base, int exponent) {
    if (exponent == 0)
        return 1;
    else
        return base * power(base, exponent - 1);
}

int main() {
    int base = 2, exponent = 3;
    printf("%d raised to power %d is %d\n", base, exponent, power(base, exponent));
    return 0;
}
///////////////////
//12 READ AND DISPLAY IN 2D ARRAY
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#define ROW 10
#define col 10

void read_2d_array(int num[ROW][col],int m,int n);
void display_2d_array(int num[ROW][col],int m,int n);

int main() {
          int m;
          int n;
           int num[ROW][col];
    scanf("%d%d",&m,&n);
        if (n>0 && m>0)
        {
            read_2d_array(num,m,n);
            display_2d_array(num,m,n);
        }
       else
       {
           printf("Rows and columns should be more than 0.\n");
       }
    return 0;
}
 void read_2d_array(int num[ROW][col],int m,int n)
 {
     int i,j;
     for (i=0;i<m;i++)
     {
         for (j=0;j<n;j++)
         {
             scanf("%d ",&num[i][j]);
         }
     }
 }

void display_2d_array(int num[ROW][col],int m,int n)
{
    int i,j;
    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
        {
            printf("%d ",num[i][j]);
        }
        printf("\n");
    }
}
////////////////
//13 EEVEN OR ODD
#include<stdio.h>
int main()
{
    int i;
    while(1)
    {


    printf("enter he value to check the value is odd or even\n");
    scanf("%d",&i);
    if(i%2==0)
    {
        printf("number entered is even\n");
    }
    else
    {
        printf("numder entered is odd \n");
    }
    }
}
/////////////
//14 SWAPING OF NUMBERS
#include<stdio.h>
int main ()
{
    int i,j;
    printf("enter the value of i and j to be swaped");
    scanf("%d%d",&i,&j);
    printf("vlaue of i =%d j=%d\n",i,j);
    int temp;
    temp=i;
    i=j;
    j=temp;
    printf("vlaue of i=%d,j=%d after the swap",i,j);
}
/////////////////////////
//15 CALCULATOR USING SWITCH
#include<stdio.h>
int main()
{
    int a,b,c,d;
    while(1)
    printf("enter the value of numbers");
    scanf("%d%d",&a,&b);
    printf("enter the 1 for addiction ,2 for subtraction,3 for multiplication,4 for division ");
    scanf("%d",&c);
    switch(c)
    {
        case 1: d=a+b;
        printf("%d",d);
        break;
        case  2: d=a-b;
        printf("%d",d);
        break;
        case 3: d=a*b;
        printf("%d",d);
        break;
        case 4:d=a%b;
        printf("%d",(float)d);
        break;
        default:printf("not valid oprator ");
}
    }

////////////
//16 DYNAMIC MEMORY ALLOCATION
#include<stdio.h>
#include<stdlib.h>
int main()
{
    int n,i;
    printf("enter the value of the array numbers: ");
    scanf("%d",&n);
    int *a=(int *)malloc(n*sizeof(int));
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    for(i=0;i<n;i++)
    {
        printf("%d",a[i]);
    }free(a);

}
/////////
//17 CONVERSION OF TEMP TO FERNAITE;
   #include<stdio.h>
 void degree(int temp);
 int main()
 {
     int c;
     printf("enter the temperature in degree\n");
     scanf("%d",&c);
     degree(c);
     return 0;

 }
  void degree(int temp)
  {
switch(temp)
      {
      case 95 ... 105 :printf("water",temp);
                break;
        case 352 ... 362 : printf("mercury",temp);
               break;
       default : printf("no",temp);
                  break;
                        }
  }
  ///////////////
//18 ADDITION OF NUMBERS
 #include<stdio.h>
 //function prototype
   int addtion(int num1,int num2);
int main()
   {
       int num1,num2,num3,sum;
       scanf("%d%d",&num1,&num2);
       //function call for addition function
       sum =addition (num1,num2);
       printf("sum is %d \n",sum);
       return 0;
   }//end of main
   //function defenation
     int addition(int num1,int num2)
     {
         int sum;
         sum=num1+num2;
         return sum;
     }
///////////////////
////19 BOILING POINNT
#include<stdio.h>
void substance(float b_point);
int main()
{
 float b_point;
 printf("Enter the boiling point\n");
 scanf("%f",&b_point);
 substance(b_point);
 return 0;
}
void substance(float b_point)
{
 float percent;
 percent=b_point*0.05;
 printf("percentage=%f\n",percent);
 if(b_point>=100-percent && b_point<=100+percent)
 printf("Substance is Water \n");
 else if(b_point>=357-percent && b_point<=357+percent)
 printf("Substance is Mercury \n");
 else if(b_point>=1187-percent && b_point<=1187+percent)
 printf("Substance is Copper \n");
 else if(b_point>=2193-percent && b_point<=2193+percent)
 printf("Substance is Silver \n");
 else if(b_point>=2660-percent && b_point<=2660+percent)
 printf("Substance is Gold \n");
 else
printf("substance is unknown\n");
}Â 
////////////////////////////
//20 MAXIMUM OF 3 NUMBERS
#include<stdio.h>
int main()
  {
      int num1,num2,num3;
      printf("enter any 3 number\n");
      scanf("%d%d%d",&num1,&num2,&num3);
      if(num1==num2&& num2==num3)
      {
       printf("all 3 number are same\n");
      }
      else if  (num1 > num2)
      {
        if(num1>num3)
        printf("%d is maximum\n",num1);
        else
        printf("%d is maximum\n",num3);
      }
        else
        {
          if (num2>num3)
          printf("%d is maximum\n",num2);
          else
          printf("%d is maximum\n",num3);
        }
        return 0;
  }
////////////////
//21 EARTH QUAKEMAGNITUDE
#include<stdio.h>
void earth_quake(float n);
int main()
{
 float n;
 printf("Enter ritcher scale number \n");
 scanf("%f",&n);
 earth_quake(n);
 return 0;
}
void earth_quake(float n)
{
 if(n<5.0)
 printf("Little or no damage\n");
 else if(n<5.5)
 printf("Some damage\n");
 else if(n<6.5)
 printf("Serious damage: walls may crack or fall\n");
 else if(n<7.5)
 printf("Disaster: houses and buildings may collapse\n");
 else
 printf("Catastrophe: most buildings destroyed\n");
}
////////////////
// 22 FIND SUM USING POINTER
#include<stdio.h>
#include<stdlib.h>
void read_array(int *ptra,int *pn)
{
    int i;
    for(i=0;i<*pn;i++)
    {
        scanf("%d",&ptra);
        ptra++;
    }
}
void display_array(int *ptra,int *pn)
{
    int i;
    for(i=0;i<*pn;i++)
    {
        printf("%d\t",*ptra);
        ptra++;
    }
}
int sum_array(int*ptra,int *pn)
{
    int i,sum=0;
    for(i=0;i<*pn;i++)
    {
        sum+=*ptra;
        ptra++;
    }
    return sum;
}
int main()
{
int n,sum,*pm;
int *ptra=NULL,*pn=NULL;
pn=&n;
printf("ENTER N VALUES\n");
scanf("%d",pn);
ptra=(int*) malloc(n*sizeof(int));
if(ptra==NULL)
    printf("memory not allocated");
else
{
    read_array(ptra,pn);
    display_array(ptra,pn);
    sum=sum_array(ptra,pn);
    printf("sum is %d \n",sum);
    printf("enter array element \n",sum);
}
free(ptra);
return 0;
}
////////////
//23 FIND MAX WITH POINTER
#include<stdio.h>
#include<stdlib.h>
void read_array(int *ptra,int *pn)
{
    int i;
    for(i=0;i<*pn;i++)
    {
        scanf("%d",&ptra);
        ptra++;
    }
}
void display_array(int *ptra,int *pn)
{
    int i;
    for(i=0;i<*pn;i++)
    {
        printf("%d\t",*ptra);
        ptra++;
    }
}
int* find_max(int *ptra,int *pn)
{
    int i,max=0,*pmax=NULL;
    for(i=0;i<*pn;i++)
    {
        if (max<*ptra)

        {
            max=*ptra;
            pmax=ptra;
        }
    }
    return pmax;
}
int main()
{
int n,sum,*pm;
int *ptra=NULL,*pn=NULL;
pn=&n;
printf("ENTER N VALUES\n");
scanf("%d",pn);
ptra=(int*) malloc(n*sizeof(int));
if(ptra==NULL)
    printf("memory not allocated");
else
{
    read_array(ptra,pn);
    display_array(ptra,pn);
    pm=find_max(ptra,pn);
    printf("at addreess %x maximum element is %d\n",pm,*pm);

}

free(ptra);
return 0;
}
//////////
//24 Reverse an Integer
#include <stdio.h>
int main()
{
    int n, reverse = 0, remainder;
    printf("Enter an integer: ");
    scanf("%d", &n);
    while (n != 0)
    {
        remainder = n % 10;
        reverse = reverse * 10 + remainder;
        n /= 10;
    }
    printf("Reversed number = %d", reverse);
return 0;
}
//////////
//25 Check Positive or Negative
#include <stdio.h>
int main()
{
    double num;
    printf("Enter a number: ");
    scanf("%lf", &num);
    if (num <= 0.0)
    {
        if (num == 0.0)
            printf("You entered 0.");
        else
            printf("You entered a negative number.");
    }
    else
        printf("You entered a positive number.");
return 0;
    }
/////////////
//26 if a number is prime or not in C
#include <stdio.h>
int main() {
    int n = 17, i, isPrime = 1;
    for (i = 2; i <= n / 2; i++) {
        if (n % i == 0) {
            isPrime = 0;
            break;
        }
    }
    if (isPrime == 1)
        printf("%d is a prime number\n", n);
    else
        printf("%d is not a prime number\n", n);
    return 0;
}
///////////////////
//27 find the Fibonacci series up to n terms in C
#include <stdio.h>
int main() {
    int n = 10, i, t1 = 0, t2 = 1, nextTerm;
    printf("Fibonacci Series up to %d terms: \n", n);
    for (i = 1; i <= n; i++) {
        printf("%d, ", t1);
        nextTerm = t1 + t2;
        t1 = t2;
        t2 = nextTerm;
    }
    printf("\n");
    return 0;
}
///////////////////////
//28 FACTORIAL IN C
#include<stdio.h>
void factorial (int n);
int main()
{
    int n;
    printf("Enter n\n");
    scanf("%d",&n);
    factorial(n);
    return 0;
}
void factorial(int n)
{
    int i=1;
    int product=1;
    while(i<=n)
    {
        product=product*i;
        i++;
    }
    printf("Factorial of number is %d\n",product);
}
//////////////////
//29 PALINDROME SEQUENCE
#include<stdio.h>
int main(){
    int num,tem,rem,sum=0;
printf("Enter a Number : ");
scanf("%d",&num);
tem=num;
do{
  rem=num%10;
  sum=sum*10+rem;
  num=num/10;
}while(num!=0);
if(tem==sum)
printf("\n%d is palindrome",sum);
else
    printf("not palindrome");
}
////////////////
//30 pyramid pattern printing
#include <stdio.h>
int main() {
    int rows, i, j;
    printf("Enter the number of rows: ");
    scanf("%d", &rows);
    for (i = 1; i <= rows; i++) {
        // Print asterisks
        for (j = 1; j <= i; j++) {
            printf("*");
        }
        printf("\n");
    }
return 0;
}


